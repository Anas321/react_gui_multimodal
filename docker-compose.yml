# This is the docker-compose file for the FastAPI and Nginx setup.
# It defines two services: frontend and backend.
# The frontend service runs an Nginx server to serve the static files.
# The backend service runs a FastAPI application.
# The frontend service depends on the backend service.
# The backend service is built from the Dockerfile in the backend directory.
# The frontend service is built from the Dockerfile in the frontend directory.
# The frontend service maps port 3000 on the host to port 80 in the container.
# The backend service maps port 8000 on the host to port 8000 in the container.
# The backend service has environment variables for Tiled API configuration.
# The TILED_URI_IMAGES and TILED_URI_MASK environment variables are set to the host's IP address.
# The TILED_API_KEY environment variable is set to the value of the TILED_API_KEY environment variable on the host.
# The app-network is created to allow communication between the frontend and backend services.
# The app-network is a bridge network.

# ------------------------------------------------------------------------------
# DOCKER COMPOSE FILE
# This file orchestrates multiple containers and defines how they work together
# ------------------------------------------------------------------------------

# The version of the docker-compose specification being used
# 3.8 is a relatively recent version with good feature support
version: "3.8"

# Define the services (containers) that make up your application
services:
  # Frontend service definition
  frontend:
    # Build configuration for this service
    build:
      # The path to the directory containing the Dockerfile
      context: ./frontend
      # The name of the Dockerfile to use (can be omitted if named "Dockerfile")
      dockerfile: Dockerfile
    # Port mapping from host to container
    ports:
      - "127.0.0.1:3000:80" # Maps port 3000 on your host machine to port 80 in the container
        # This means you can access the frontend at http://localhost:3000
    # Dependency configuration - ensures backend starts before frontend
    depends_on:
      - backend
    # Connect this service to the defined network
    networks:
      - app-network

  # Backend service definition
  backend:
    # Build configuration for this service
    build:
      # The path to the directory containing the Dockerfile
      context: ./backend
      # The name of the Dockerfile to use
      dockerfile: Dockerfile
    # Connect this service to the defined network
    networks:
      - app-network
    # Environment variables passed to the container
    environment:
      # Configuration for the Tiled API that your backend connects to
      # host.docker.internal is a special Docker DNS name that resolves to the host machine
      - TILED_URI_IMAGES=${TILED_URI_IMAGES}
      - TILED_URI_MASK=${TILED_URI_MASK}
      # This uses the host machine's environment variable of the same name
      # The ${} syntax allows you to pass through environment variables from your host
      - TILED_API_KEY=${TILED_API_KEY}

networks:
  # Create a network named "app-network"
  app-network:
    # Use the bridge driver, which is the default network driver
    # Bridge networks are isolated networks on a single host
    driver: bridge
